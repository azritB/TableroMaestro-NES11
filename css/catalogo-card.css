@import url('https://fonts.googleapis.com/css?family=El+Messiri');

/*
  Este archivo es SOLO para las cards del catálogo.
  El fondo de imagen general lo quitaremos de aquí para que no afecte a otras páginas
  y lo aplicaremos específicamente si es necesario.
*/

/*
  Si quieres que el fondo de imagen ('https://images2.imgbox.com/79/66/q4b8r0hu_o.jpg')
  sea SOLO para la página del catálogo, añade esta clase al <body> o <main> de catalogo.html
  y descomenta el siguiente bloque CSS.
*/
/*
.catalogo-con-fondo-especial::before {
  content: ' ';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('https://images2.imgbox.com/79/66/q4b8r0hu_o.jpg') 0 0/cover no-repeat;
  z-index: -10;
}
*/

.card {
  position: relative;
  max-width: 26.5em;
  /* margin: 2rem auto; Lo quitamos para el grid layout, el grid se encarga del espaciado */
  padding: 2em;
  background: #fff;
  font-family: 'El Messiri', sans-serif;
  box-shadow: 0 4px 15px rgba(0,0,0,0.1); /* Sombra sutil para destacar la card */
  border-radius: 8px; /* Bordes redondeados */
  overflow: hidden; /* Importante para que el ::before no se desborde visualmente */
}

.card__title {
  margin: 0 auto 1em;
  color: #333;
  text-align: center;
  text-transform: capitalize;
  font-family: 'El Messiri', sans-serif;
}

.card__img {
  display: block;
  width: 100%; /* Responsive dentro de la card */
  max-width: 20em; /* Límite opcional */
  height: 200px; /* Alto fijo para uniformidad */
  object-fit: cover; /* Evita deformación */
  margin: 1em auto;
  border-radius: 2px;
}

.card__text {
  margin: 1em 5% 1.5em 5%;
  color: #646464;
  font-family: 'El Messiri', sans-serif;
  min-height: 70px; /* Para dar un alto mínimo al texto */
}

.card__price { /* Estilo añadido para el precio en la card del catálogo */
    text-align: center;
    font-weight: bold;
    color: #2c3e50;
    margin-bottom: 1em;
    font-size: 1.1em;
}

.card__btn {
  display: table;
  padding: .7em 2em;
  background: #ddba76;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  margin: 1em auto 0;
  font-family: 'El Messiri', sans-serif;
  border-radius: 4px;
  transition: background-color 0.3s;
}
.card__btn:hover {
    background-color: #c9a86a;
}

/**
 * Card #9 - Efecto 3D con Hover
 * Utiliza variables CSS actualizadas por JavaScript
 */
.card--9 {
  --mouseX9: 0; /* Valor por defecto */
  --mouseY9: 0; /* Valor por defecto */
  --padding-effect: 1em; /* Padding para el efecto del ::before */

  background: #fff; /* Fondo base de la card */
  position: relative; /* Necesario para el posicionamiento absoluto del ::before */
  /* overflow: hidden; Ya está en .card general, pero no hace daño repetirlo si solo aplicas .card--9 */
  /* transition: transform 0.1s ease-out; Aplicado al ::before directamente */
}

.card--9::before {
  content: ' ';
  display: block;
  position: absolute;
  /* Usamos la variable --padding-effect para el tamaño del "marco" */
  top: calc(var(--padding-effect) * -1);
  bottom: calc(var(--padding-effect) * -1);
  left: calc(var(--padding-effect) * -1);
  right: calc(var(--padding-effect) * -1);
  
  background: #333; /* Color del "marco" que se mueve */
  opacity: .9;
  z-index: -1; /* Detrás del contenido de la card */
  
  /* La magia de la transformación usando las variables CSS */
  transform: perspective(700px) rotateX(calc(var(--mouseY9) * 1deg)) rotateY(calc(var(--mouseX9) * 1deg));
  /*
    Nota: En tu JS, --mouseY9 se multiplica por -1. Si quieres que la rotación en X sea
    Y hacia arriba -> card se inclina hacia atrás (rotación X negativa)
    Y hacia abajo -> card se inclina hacia adelante (rotación X positiva)
    Entonces en JS: card.style.setProperty('--mouseY9', mouseYPercent * maxRotation);
    Y en CSS: rotateX(calc(var(--mouseY9) * -1deg)) o como lo tienes ahora.
    La versión actual (como la tenías en el CSS original) con `rotateX(calc(var(--mouseY9) * -1deg))`
    y en JS `card.style.setProperty('--mouseY9', mouseYPercent * -maxRotation)` es correcta:
    - Mover mouse arriba (Y negativa) -> --mouseY9 positivo -> rotación X negativa (inclina hacia atrás)
    - Mover mouse abajo (Y positiva) -> --mouseY9 negativo -> rotación X positiva (inclina hacia adelante)
  */
  
  transition: transform 0.05s linear; /* Transición suave para el efecto */
  will-change: transform; /* Optimización para el navegador */
}